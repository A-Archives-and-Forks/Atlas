---
title: Root Playbook File
description: Runs all of the Playbook files
actions:
  # AME Wizard seemingly has a bug where it doesn't mount other user's Registry hives
  - !writeStatus: { status: "Preparing hives" }
  - !powerShell:
    command: |
      do {
        try {
            reg load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT" > nul
        } catch {
            Write-Warning $error[0]
        }
      } until (!$processesFound)
    weight: 10
    wait: true

  - !writeStatus: { status: "Deleting old AtlasOS folders" }
  - !powerShell:
    command: |
      $windir = [Environment]::GetFolderPath('Windows')
      Remove-Item -LiteralPath "$windir\AtlasDesktop" -Force -Recurse
      Remove-Item -LiteralPath "$windir\AtlasModules" -Force -Recurse
    wait: true
    exeDir: true
    onUpgrade: true

  - !writeStatus: { status: "Copying files" }
  - !powerShell:
    command: |
      $windir = [Environment]::GetFolderPath('Windows')
      @(
          'AtlasModules',
          'AtlasDesktop'
      ) | ForEach-Object {
          if (!(Test-Path $_)) { exit 1 }
          Copy-Item -Path $_ -Destination $windir -Force -Recurse
          if (!$?) { exit 2 }
      }
      Start-Process -FilePath "$windir\AtlasDesktop\6. Advanced Configuration\Process Explorer\Uninstall Process Explorer.cmd" -ArgumentList "/silent"
      Copy-Item -Path 'Themes\*' -Destination """$windir\Resources\Themes""" -Force -Recurse
    weight: 10
    wait: true
    exeDir: true
    handleExitCodes: { "!0": halt }

  # - !writeStatus: { status: "Copying files" }
  # - !powerShell:
  #   command: |
  #     $windir = [Environment]::GetFolderPath('Windows')
  #     New-Item -Path ";$windir\AtlasModules\" -Name "OOBETemp" -ItemType "Directory"
  #     New-Item -Path ";$windir\AtlasModules\OOBETemp" -Name "Executables" -ItemType "Directory"
  #     New-Item -Path ";$windir\AtlasModules\OOBETemp" -Name "Configuration" -ItemType "Directory"
  #     $windir = [Environment]::GetFolderPath('Windows')
  #     @(
  #         '..\Configuration\tweaks',
  #     ) | ForEach-Object {
  #         if (!(Test-Path $_)) { exit 1 }
  #         Copy-Item -Path $_ -Destination ";$windir\AtlasModules\Configuration" -Force -Recurse
  #         if (!$?) { exit 2 }
  #     }
  #         Copy-Item -Path 'APPLYDUHIVE.ps1' -Destination """$windir\AtlasModules\OOBETemp\Executables""" -Force -Recurse

  #   weight: 10
  #   wait: true
  #   exeDir: true
  #   handleExitCodes: { "!0": halt }

  # Prevent annoying notifications during deployment
  - !cmd:
    command: "DISABLENOTIFS.cmd"
    exeDir: true
    wait: true
    runas: currentUserElevated
  - !taskKill: { name: "explorer" }
  - !taskKill: { name: "ShellExperienceHost" }
  - !run: { exe: "explorer.exe", runas: "currentUser", wait: false }

  # Configure PowerShell first so that other PowerShell scripts work
  # NGEN - .NET assemblies PowerShell optimization
  - !writeStatus: { status: "Optimizing PowerShell" }
  - !task: { path: 'tweaks\scripts\script-ngen.yml' }
  - !task: { path: 'tweaks\qol\config-powershell.yml' }

  # Disk Cleanup is run first so it can run in the background
  - !writeStatus: { status: "Cleaning up" }
  - !powerShell:
    command: '.\CLEANUP.ps1'
    exeDir: true
    wait: true
    runas: currentUserElevated

  # Set hidden Settings pages
  # Done before everything else as scripts will overwrite it
  - !task: { path: 'tweaks\qol\set-hidden-settings-pages.yml' }

  # Main tasks
  - !task: { path: 'atlas\start.yml' }
  - !task: { path: 'atlas\services.yml' }
  - !task: { path: 'atlas\components.yml' }
  - !task: { path: 'atlas\appx.yml' }
  - !task: { path: 'atlas\default.yml' }
  - !task: { path: 'atlas\revert.yml' }
  - !task: { path: "tweaks.yml" }

  # Test hive applying. Not sure if this will work as intended
  - !writeStatus: { status: "Applying hives..." }
  - !powerShell:
    command: '.\APPLYDUHIVE.ps1'
    exeDir: true
    wait: true
    runas: currentUserElevated
    oobe: false

  # Set all the correct paths if there are incorrect ones in the registry
  - !writeStatus: { status: "Cleaning up registry paths" }
  - !powerShell:
    command: '.\SETPATHS.ps1'
    exeDir: true
    wait: true
    runas: currentUserElevated

  - !writeStatus: { status: "Cleaning up hives" }
  - !powerShell:
    command: |
      reg unload "HKU\DefaultUser"
    wait: true
